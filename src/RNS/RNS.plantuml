@startuml

title __RNS's Class Diagram__\n

  package RNS {
    class CalculateException {
        + CalculateException()
    }
  }


  package RNS {
    class Convert {
        - Convert()
        {static} + toRNS()
        {static} + toPositionalSystem()
    }
  }
  

  package RNS {
    interface ICalculable {
        {abstract} + resultOf()
    }
  }
  

  package RNS {
    class Math {
        - Math()
        {static} - calculate()
        {static} + add()
        {static} + subtract()
        {static} + multiply()
        {static} + divide()
        {static} ~ mod()
        {static} ~ GCD()
        {static} - GCDExtended()
        {static} ~ invNum()
    }
  }
  

  package RNS {
    class ModSystem {
        + ModSystem()
        + ModSystem()
        + ModSystem()
        + ModSystem()
        {static} + isPairwiseSimple()
        - isPairwiseSimple()
        + getDynamicRange()
        {static} + generateModSystem()
    }
  }
  

  package RNS {
    class PostfixNotation {
        {static} - operators : ArrayList<String>
        - PostfixNotation()
        {static} - getPriority()
        {static} - separate()
        {static} - convertToPostfixNotation()
        {static} - isNullOrWhiteSpace()
        {static} + resultOfExpression()
    }
  }
  

  package RNS {
    abstract class System {
        # system : int[]
        # System()
        # System()
        + getSystem()
        + setSystem()
        + getLength()
        {static} + toArray()
        + toString()
    }
  }
  

  package RNS {
    class Unit {
        + Unit()
        + Unit()
        + Unit()
        + Unit()
        + getModSystem()
        + setModSystem()
    }
  }
  

  ModSystem -up-|> System
  Unit -up-|> System
  Unit o-- ModSystem : modSystem


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
